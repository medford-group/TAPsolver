# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _fem.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_fem')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_fem')
    _fem = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_fem', [dirname(__file__)])
        except ImportError:
            import _fem
            return _fem
        try:
            _mod = imp.load_module('_fem', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _fem = swig_import_helper()
    del swig_import_helper
else:
    import _fem
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


try:
    import weakref
    weakref_proxy = weakref.proxy
except __builtin__.Exception:
    weakref_proxy = lambda x: x


SHARED_PTR_DISOWN = _fem.SHARED_PTR_DISOWN

def _attach_base_to_numpy_array(obj: 'PyObject *', owner: 'PyObject *') -> "PyObject *":
    return _fem._attach_base_to_numpy_array(obj, owner)
_attach_base_to_numpy_array = _fem._attach_base_to_numpy_array

def dolfin_swigversion() -> "unsigned int":
    return _fem.dolfin_swigversion()
dolfin_swigversion = _fem.dolfin_swigversion

def dolfin_pythonversion() -> "unsigned int":
    return _fem.dolfin_pythonversion()
dolfin_pythonversion = _fem.dolfin_pythonversion

tmp = hex(dolfin_swigversion())
__swigversion__ = "%d.%d.%d"%(tuple(map(int, [tmp[-5], tmp[-3], tmp[-2:]])))
tmp = hex(dolfin_pythonversion())
__pythonversion__ = "%d.%d.%d"%(tuple(map(lambda x: int(x,16), [tmp[2], tmp[3:5], tmp[5:7]])))
del tmp, dolfin_pythonversion, dolfin_swigversion


def has_petsc4py() -> "bool":
    return _fem.has_petsc4py()
has_petsc4py = _fem.has_petsc4py

def has_slepc4py() -> "bool":
    return _fem.has_slepc4py()
has_slepc4py = _fem.has_slepc4py
UFC_VERSION_MAJOR = _fem.UFC_VERSION_MAJOR
UFC_VERSION_MINOR = _fem.UFC_VERSION_MINOR
UFC_VERSION_MAINTENANCE = _fem.UFC_VERSION_MAINTENANCE
UFC_VERSION_RELEASE = _fem.UFC_VERSION_RELEASE
ufc_shape_interval = _fem.ufc_shape_interval
ufc_shape_triangle = _fem.ufc_shape_triangle
ufc_shape_quadrilateral = _fem.ufc_shape_quadrilateral
ufc_shape_tetrahedron = _fem.ufc_shape_tetrahedron
ufc_shape_hexahedron = _fem.ufc_shape_hexahedron
class ufc_cell(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    cell_shape = _swig_property(_fem.ufc_cell_cell_shape_get, _fem.ufc_cell_cell_shape_set)
    topological_dimension = _swig_property(_fem.ufc_cell_topological_dimension_get, _fem.ufc_cell_topological_dimension_set)
    geometric_dimension = _swig_property(_fem.ufc_cell_geometric_dimension_get, _fem.ufc_cell_geometric_dimension_set)
    index = _swig_property(_fem.ufc_cell_index_get, _fem.ufc_cell_index_set)
    local_facet = _swig_property(_fem.ufc_cell_local_facet_get, _fem.ufc_cell_local_facet_set)
    mesh_identifier = _swig_property(_fem.ufc_cell_mesh_identifier_get, _fem.ufc_cell_mesh_identifier_set)
    __swig_destroy__ = _fem.delete_ufc_cell
ufc_cell_swigregister = _fem.ufc_cell_swigregister
ufc_cell_swigregister(ufc_cell)
cvar = _fem.cvar
UFC_VERSION = cvar.UFC_VERSION

class ufc_function(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _fem.delete_ufc_function
ufc_function_swigregister = _fem.ufc_function_swigregister
ufc_function_swigregister(ufc_function)

class ufc_finite_element(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _fem.delete_ufc_finite_element
ufc_finite_element_swigregister = _fem.ufc_finite_element_swigregister
ufc_finite_element_swigregister(ufc_finite_element)

class ufc_dofmap(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _fem.delete_ufc_dofmap
ufc_dofmap_swigregister = _fem.ufc_dofmap_swigregister
ufc_dofmap_swigregister(ufc_dofmap)

class ufc_coordinate_mapping(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _fem.delete_ufc_coordinate_mapping
ufc_coordinate_mapping_swigregister = _fem.ufc_coordinate_mapping_swigregister
ufc_coordinate_mapping_swigregister(ufc_coordinate_mapping)

class ufc_form(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _fem.delete_ufc_form
ufc_form_swigregister = _fem.ufc_form_swigregister
ufc_form_swigregister(ufc_form)


def make_ufc_finite_element(*args) -> "std::shared_ptr< ufc::finite_element const >":
    return _fem.make_ufc_finite_element(*args)
make_ufc_finite_element = _fem.make_ufc_finite_element

def make_ufc_dofmap(*args) -> "std::shared_ptr< ufc::dofmap const >":
    return _fem.make_ufc_dofmap(*args)
make_ufc_dofmap = _fem.make_ufc_dofmap

def make_ufc_coordinate_mapping(*args) -> "std::shared_ptr< ufc::coordinate_mapping const >":
    return _fem.make_ufc_coordinate_mapping(*args)
make_ufc_coordinate_mapping = _fem.make_ufc_coordinate_mapping

def make_ufc_form(*args) -> "std::shared_ptr< ufc::form const >":
    return _fem.make_ufc_form(*args)
make_ufc_form = _fem.make_ufc_form
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import common
else:
    import common
del _swig_python_version_info
class HierarchicalMesh(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, arg2: 'Mesh'):
        _fem.HierarchicalMesh_swiginit(self, _fem.new_HierarchicalMesh(arg2))
    __swig_destroy__ = _fem.delete_HierarchicalMesh
HierarchicalMesh.depth = new_instancemethod(_fem.HierarchicalMesh_depth, None, HierarchicalMesh)
HierarchicalMesh.has_parent = new_instancemethod(_fem.HierarchicalMesh_has_parent, None, HierarchicalMesh)
HierarchicalMesh.has_child = new_instancemethod(_fem.HierarchicalMesh_has_child, None, HierarchicalMesh)
HierarchicalMesh._parent = new_instancemethod(_fem.HierarchicalMesh__parent, None, HierarchicalMesh)
HierarchicalMesh._child = new_instancemethod(_fem.HierarchicalMesh__child, None, HierarchicalMesh)
HierarchicalMesh._root_node = new_instancemethod(_fem.HierarchicalMesh__root_node, None, HierarchicalMesh)
HierarchicalMesh._leaf_node = new_instancemethod(_fem.HierarchicalMesh__leaf_node, None, HierarchicalMesh)
HierarchicalMesh.set_parent = new_instancemethod(_fem.HierarchicalMesh_set_parent, None, HierarchicalMesh)
HierarchicalMesh.clear_child = new_instancemethod(_fem.HierarchicalMesh_clear_child, None, HierarchicalMesh)
HierarchicalMesh.set_child = new_instancemethod(_fem.HierarchicalMesh_set_child, None, HierarchicalMesh)
HierarchicalMesh._debug = new_instancemethod(_fem.HierarchicalMesh__debug, None, HierarchicalMesh)
HierarchicalMesh_swigregister = _fem.HierarchicalMesh_swigregister
HierarchicalMesh_swigregister(HierarchicalMesh)

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import mesh
else:
    import mesh
del _swig_python_version_info
from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import la
else:
    import la
del _swig_python_version_info
class HierarchicalFunctionSpace(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, arg2: 'FunctionSpace'):
        _fem.HierarchicalFunctionSpace_swiginit(self, _fem.new_HierarchicalFunctionSpace(arg2))
    __swig_destroy__ = _fem.delete_HierarchicalFunctionSpace
HierarchicalFunctionSpace.depth = new_instancemethod(_fem.HierarchicalFunctionSpace_depth, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace.has_parent = new_instancemethod(_fem.HierarchicalFunctionSpace_has_parent, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace.has_child = new_instancemethod(_fem.HierarchicalFunctionSpace_has_child, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace._parent = new_instancemethod(_fem.HierarchicalFunctionSpace__parent, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace._child = new_instancemethod(_fem.HierarchicalFunctionSpace__child, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace._root_node = new_instancemethod(_fem.HierarchicalFunctionSpace__root_node, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace._leaf_node = new_instancemethod(_fem.HierarchicalFunctionSpace__leaf_node, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace.set_parent = new_instancemethod(_fem.HierarchicalFunctionSpace_set_parent, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace.clear_child = new_instancemethod(_fem.HierarchicalFunctionSpace_clear_child, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace.set_child = new_instancemethod(_fem.HierarchicalFunctionSpace_set_child, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace._debug = new_instancemethod(_fem.HierarchicalFunctionSpace__debug, None, HierarchicalFunctionSpace)
HierarchicalFunctionSpace_swigregister = _fem.HierarchicalFunctionSpace_swigregister
HierarchicalFunctionSpace_swigregister(HierarchicalFunctionSpace)

class HierarchicalFunction(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, arg2: 'Function'):
        _fem.HierarchicalFunction_swiginit(self, _fem.new_HierarchicalFunction(arg2))
    __swig_destroy__ = _fem.delete_HierarchicalFunction
HierarchicalFunction.depth = new_instancemethod(_fem.HierarchicalFunction_depth, None, HierarchicalFunction)
HierarchicalFunction.has_parent = new_instancemethod(_fem.HierarchicalFunction_has_parent, None, HierarchicalFunction)
HierarchicalFunction.has_child = new_instancemethod(_fem.HierarchicalFunction_has_child, None, HierarchicalFunction)
HierarchicalFunction._parent = new_instancemethod(_fem.HierarchicalFunction__parent, None, HierarchicalFunction)
HierarchicalFunction._child = new_instancemethod(_fem.HierarchicalFunction__child, None, HierarchicalFunction)
HierarchicalFunction._root_node = new_instancemethod(_fem.HierarchicalFunction__root_node, None, HierarchicalFunction)
HierarchicalFunction._leaf_node = new_instancemethod(_fem.HierarchicalFunction__leaf_node, None, HierarchicalFunction)
HierarchicalFunction.set_parent = new_instancemethod(_fem.HierarchicalFunction_set_parent, None, HierarchicalFunction)
HierarchicalFunction.clear_child = new_instancemethod(_fem.HierarchicalFunction_clear_child, None, HierarchicalFunction)
HierarchicalFunction.set_child = new_instancemethod(_fem.HierarchicalFunction_set_child, None, HierarchicalFunction)
HierarchicalFunction._debug = new_instancemethod(_fem.HierarchicalFunction__debug, None, HierarchicalFunction)
HierarchicalFunction_swigregister = _fem.HierarchicalFunction_swigregister
HierarchicalFunction_swigregister(HierarchicalFunction)

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    from . import function
else:
    import function
del _swig_python_version_info
class HierarchicalForm(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, arg2: 'Form'):
        _fem.HierarchicalForm_swiginit(self, _fem.new_HierarchicalForm(arg2))
    __swig_destroy__ = _fem.delete_HierarchicalForm
HierarchicalForm.depth = new_instancemethod(_fem.HierarchicalForm_depth, None, HierarchicalForm)
HierarchicalForm.has_parent = new_instancemethod(_fem.HierarchicalForm_has_parent, None, HierarchicalForm)
HierarchicalForm.has_child = new_instancemethod(_fem.HierarchicalForm_has_child, None, HierarchicalForm)
HierarchicalForm._parent = new_instancemethod(_fem.HierarchicalForm__parent, None, HierarchicalForm)
HierarchicalForm._child = new_instancemethod(_fem.HierarchicalForm__child, None, HierarchicalForm)
HierarchicalForm._root_node = new_instancemethod(_fem.HierarchicalForm__root_node, None, HierarchicalForm)
HierarchicalForm._leaf_node = new_instancemethod(_fem.HierarchicalForm__leaf_node, None, HierarchicalForm)
HierarchicalForm.set_parent = new_instancemethod(_fem.HierarchicalForm_set_parent, None, HierarchicalForm)
HierarchicalForm.clear_child = new_instancemethod(_fem.HierarchicalForm_clear_child, None, HierarchicalForm)
HierarchicalForm.set_child = new_instancemethod(_fem.HierarchicalForm_set_child, None, HierarchicalForm)
HierarchicalForm._debug = new_instancemethod(_fem.HierarchicalForm__debug, None, HierarchicalForm)
HierarchicalForm_swigregister = _fem.HierarchicalForm_swigregister
HierarchicalForm_swigregister(HierarchicalForm)

class HierarchicalLinearVariationalProblem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, arg2: 'LinearVariationalProblem'):
        _fem.HierarchicalLinearVariationalProblem_swiginit(self, _fem.new_HierarchicalLinearVariationalProblem(arg2))
    __swig_destroy__ = _fem.delete_HierarchicalLinearVariationalProblem
HierarchicalLinearVariationalProblem.depth = new_instancemethod(_fem.HierarchicalLinearVariationalProblem_depth, None, HierarchicalLinearVariationalProblem)
HierarchicalLinearVariationalProblem.has_parent = new_instancemethod(_fem.HierarchicalLinearVariationalProblem_has_parent, None, HierarchicalLinearVariationalProblem)
HierarchicalLinearVariationalProblem.has_child = new_instancemethod(_fem.HierarchicalLinearVariationalProblem_has_child, None, HierarchicalLinearVariationalProblem)
HierarchicalLinearVariationalProblem._parent = new_instancemethod(_fem.HierarchicalLinearVariationalProblem__parent, None, HierarchicalLinearVariationalProblem)
HierarchicalLinearVariationalProblem._child = new_instancemethod(_fem.HierarchicalLinearVariationalProblem__child, None, HierarchicalLinearVariationalProblem)
HierarchicalLinearVariationalProblem._root_node = new_instancemethod(_fem.HierarchicalLinearVariationalProblem__root_node, None, HierarchicalLinearVariationalProblem)
HierarchicalLinearVariationalProblem._leaf_node = new_instancemethod(_fem.HierarchicalLinearVariationalProblem__leaf_node, None, HierarchicalLinearVariationalProblem)
HierarchicalLinearVariationalProblem.set_parent = new_instancemethod(_fem.HierarchicalLinearVariationalProblem_set_parent, None, HierarchicalLinearVariationalProblem)
HierarchicalLinearVariationalProblem.clear_child = new_instancemethod(_fem.HierarchicalLinearVariationalProblem_clear_child, None, HierarchicalLinearVariationalProblem)
HierarchicalLinearVariationalProblem.set_child = new_instancemethod(_fem.HierarchicalLinearVariationalProblem_set_child, None, HierarchicalLinearVariationalProblem)
HierarchicalLinearVariationalProblem._debug = new_instancemethod(_fem.HierarchicalLinearVariationalProblem__debug, None, HierarchicalLinearVariationalProblem)
HierarchicalLinearVariationalProblem_swigregister = _fem.HierarchicalLinearVariationalProblem_swigregister
HierarchicalLinearVariationalProblem_swigregister(HierarchicalLinearVariationalProblem)

class HierarchicalNonlinearVariationalProblem(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, arg2: 'NonlinearVariationalProblem'):
        _fem.HierarchicalNonlinearVariationalProblem_swiginit(self, _fem.new_HierarchicalNonlinearVariationalProblem(arg2))
    __swig_destroy__ = _fem.delete_HierarchicalNonlinearVariationalProblem
HierarchicalNonlinearVariationalProblem.depth = new_instancemethod(_fem.HierarchicalNonlinearVariationalProblem_depth, None, HierarchicalNonlinearVariationalProblem)
HierarchicalNonlinearVariationalProblem.has_parent = new_instancemethod(_fem.HierarchicalNonlinearVariationalProblem_has_parent, None, HierarchicalNonlinearVariationalProblem)
HierarchicalNonlinearVariationalProblem.has_child = new_instancemethod(_fem.HierarchicalNonlinearVariationalProblem_has_child, None, HierarchicalNonlinearVariationalProblem)
HierarchicalNonlinearVariationalProblem._parent = new_instancemethod(_fem.HierarchicalNonlinearVariationalProblem__parent, None, HierarchicalNonlinearVariationalProblem)
HierarchicalNonlinearVariationalProblem._child = new_instancemethod(_fem.HierarchicalNonlinearVariationalProblem__child, None, HierarchicalNonlinearVariationalProblem)
HierarchicalNonlinearVariationalProblem._root_node = new_instancemethod(_fem.HierarchicalNonlinearVariationalProblem__root_node, None, HierarchicalNonlinearVariationalProblem)
HierarchicalNonlinearVariationalProblem._leaf_node = new_instancemethod(_fem.HierarchicalNonlinearVariationalProblem__leaf_node, None, HierarchicalNonlinearVariationalProblem)
HierarchicalNonlinearVariationalProblem.set_parent = new_instancemethod(_fem.HierarchicalNonlinearVariationalProblem_set_parent, None, HierarchicalNonlinearVariationalProblem)
HierarchicalNonlinearVariationalProblem.clear_child = new_instancemethod(_fem.HierarchicalNonlinearVariationalProblem_clear_child, None, HierarchicalNonlinearVariationalProblem)
HierarchicalNonlinearVariationalProblem.set_child = new_instancemethod(_fem.HierarchicalNonlinearVariationalProblem_set_child, None, HierarchicalNonlinearVariationalProblem)
HierarchicalNonlinearVariationalProblem._debug = new_instancemethod(_fem.HierarchicalNonlinearVariationalProblem__debug, None, HierarchicalNonlinearVariationalProblem)
HierarchicalNonlinearVariationalProblem_swigregister = _fem.HierarchicalNonlinearVariationalProblem_swigregister
HierarchicalNonlinearVariationalProblem_swigregister(HierarchicalNonlinearVariationalProblem)

class HierarchicalDirichletBC(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, arg2: 'DirichletBC'):
        _fem.HierarchicalDirichletBC_swiginit(self, _fem.new_HierarchicalDirichletBC(arg2))
    __swig_destroy__ = _fem.delete_HierarchicalDirichletBC
HierarchicalDirichletBC.depth = new_instancemethod(_fem.HierarchicalDirichletBC_depth, None, HierarchicalDirichletBC)
HierarchicalDirichletBC.has_parent = new_instancemethod(_fem.HierarchicalDirichletBC_has_parent, None, HierarchicalDirichletBC)
HierarchicalDirichletBC.has_child = new_instancemethod(_fem.HierarchicalDirichletBC_has_child, None, HierarchicalDirichletBC)
HierarchicalDirichletBC._parent = new_instancemethod(_fem.HierarchicalDirichletBC__parent, None, HierarchicalDirichletBC)
HierarchicalDirichletBC._child = new_instancemethod(_fem.HierarchicalDirichletBC__child, None, HierarchicalDirichletBC)
HierarchicalDirichletBC._root_node = new_instancemethod(_fem.HierarchicalDirichletBC__root_node, None, HierarchicalDirichletBC)
HierarchicalDirichletBC._leaf_node = new_instancemethod(_fem.HierarchicalDirichletBC__leaf_node, None, HierarchicalDirichletBC)
HierarchicalDirichletBC.set_parent = new_instancemethod(_fem.HierarchicalDirichletBC_set_parent, None, HierarchicalDirichletBC)
HierarchicalDirichletBC.clear_child = new_instancemethod(_fem.HierarchicalDirichletBC_clear_child, None, HierarchicalDirichletBC)
HierarchicalDirichletBC.set_child = new_instancemethod(_fem.HierarchicalDirichletBC_set_child, None, HierarchicalDirichletBC)
HierarchicalDirichletBC._debug = new_instancemethod(_fem.HierarchicalDirichletBC__debug, None, HierarchicalDirichletBC)
HierarchicalDirichletBC_swigregister = _fem.HierarchicalDirichletBC_swigregister
HierarchicalDirichletBC_swigregister(HierarchicalDirichletBC)

class GenericDofMap(common.Variable):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def is_view(self) -> "bool":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_is_view(self)


    def global_dimension(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_global_dimension(self)


    def cell_dimension(self, index: 'std::size_t') -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_cell_dimension(self, index)


    def max_cell_dimension(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_max_cell_dimension(self)


    def num_element_dofs(self, index: 'std::size_t') -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_num_element_dofs(self, index)


    def max_element_dofs(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_max_element_dofs(self)


    def num_entity_dofs(self, entity_dim: 'std::size_t') -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_num_entity_dofs(self, entity_dim)


    def num_entity_closure_dofs(self, entity_dim: 'std::size_t') -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_num_entity_closure_dofs(self, entity_dim)


    def num_facet_dofs(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_num_facet_dofs(self)


    def ownership_range(self) -> "std::pair< std::size_t,std::size_t >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_ownership_range(self)


    def off_process_owner(self) -> "std::vector< int > const &":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_off_process_owner(self)


    def entity_dofs(self, *args) -> "std::vector< dolfin::la_index >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_entity_dofs(self, *args)


    def entity_closure_dofs(self, *args) -> "std::vector< dolfin::la_index >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_entity_closure_dofs(self, *args)


    def tabulate_facet_dofs(self, cell_facet_index: 'std::size_t') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_tabulate_facet_dofs(self, cell_facet_index)


    def tabulate_entity_dofs(self, entity_dim: 'std::size_t', cell_entity_index: 'std::size_t') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_tabulate_entity_dofs(self, entity_dim, cell_entity_index)


    def tabulate_entity_closure_dofs(self, entity_dim: 'std::size_t', cell_entity_index: 'std::size_t') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_tabulate_entity_closure_dofs(self, entity_dim, cell_entity_index)


    def tabulate_global_dofs(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_tabulate_global_dofs(self)


    def copy(self) -> "std::shared_ptr< dolfin::GenericDofMap >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_copy(self)


    def create(self, new_mesh: 'Mesh') -> "std::shared_ptr< dolfin::GenericDofMap >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_create(self, new_mesh)


    def extract_sub_dofmap(self, component: 'std::vector< std::size_t > const &', mesh: 'Mesh') -> "std::shared_ptr< dolfin::GenericDofMap >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_extract_sub_dofmap(self, component, mesh)


    def collapse(self, mesh: 'Mesh') -> "std::shared_ptr< dolfin::GenericDofMap >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_collapse(self, mesh)


    def dofs(self, *args) -> "std::vector< dolfin::la_index >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_dofs(self, *args)


    def set(self, x: 'GenericVector', value: 'double') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_set(self, x, value)


    def local_to_global_unowned(self) -> "std::vector< std::size_t > const &":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_local_to_global_unowned(self)


    def index_map(self) -> "std::shared_ptr< dolfin::IndexMap const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_index_map(self)


    def tabulate_local_to_global_dofs(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_tabulate_local_to_global_dofs(self)


    def local_to_global_index(self, local_index: 'int') -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_local_to_global_index(self, local_index)


    def shared_nodes(self) -> "std::unordered_map< int,std::vector< int > > const &":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_shared_nodes(self)


    def neighbours(self) -> "std::set< int > const &":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_neighbours(self)


    def clear_sub_map_data(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_clear_sub_map_data(self)


    def block_size(self) -> "int":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericDofMap_block_size(self)

    constrained_domain = _swig_property(_fem.GenericDofMap_constrained_domain_get, _fem.GenericDofMap_constrained_domain_set)

    def cell_dofs(self, i):
        "Return the dofmap for a cell"
        return self._cell_dofs(i)

    __swig_destroy__ = _fem.delete_GenericDofMap
GenericDofMap.is_view = new_instancemethod(_fem.GenericDofMap_is_view, None, GenericDofMap)
GenericDofMap.global_dimension = new_instancemethod(_fem.GenericDofMap_global_dimension, None, GenericDofMap)
GenericDofMap.cell_dimension = new_instancemethod(_fem.GenericDofMap_cell_dimension, None, GenericDofMap)
GenericDofMap.max_cell_dimension = new_instancemethod(_fem.GenericDofMap_max_cell_dimension, None, GenericDofMap)
GenericDofMap.num_element_dofs = new_instancemethod(_fem.GenericDofMap_num_element_dofs, None, GenericDofMap)
GenericDofMap.max_element_dofs = new_instancemethod(_fem.GenericDofMap_max_element_dofs, None, GenericDofMap)
GenericDofMap.num_entity_dofs = new_instancemethod(_fem.GenericDofMap_num_entity_dofs, None, GenericDofMap)
GenericDofMap.num_entity_closure_dofs = new_instancemethod(_fem.GenericDofMap_num_entity_closure_dofs, None, GenericDofMap)
GenericDofMap.num_facet_dofs = new_instancemethod(_fem.GenericDofMap_num_facet_dofs, None, GenericDofMap)
GenericDofMap.ownership_range = new_instancemethod(_fem.GenericDofMap_ownership_range, None, GenericDofMap)
GenericDofMap.off_process_owner = new_instancemethod(_fem.GenericDofMap_off_process_owner, None, GenericDofMap)
GenericDofMap.entity_dofs = new_instancemethod(_fem.GenericDofMap_entity_dofs, None, GenericDofMap)
GenericDofMap.entity_closure_dofs = new_instancemethod(_fem.GenericDofMap_entity_closure_dofs, None, GenericDofMap)
GenericDofMap.tabulate_facet_dofs = new_instancemethod(_fem.GenericDofMap_tabulate_facet_dofs, None, GenericDofMap)
GenericDofMap.tabulate_entity_dofs = new_instancemethod(_fem.GenericDofMap_tabulate_entity_dofs, None, GenericDofMap)
GenericDofMap.tabulate_entity_closure_dofs = new_instancemethod(_fem.GenericDofMap_tabulate_entity_closure_dofs, None, GenericDofMap)
GenericDofMap.tabulate_global_dofs = new_instancemethod(_fem.GenericDofMap_tabulate_global_dofs, None, GenericDofMap)
GenericDofMap.copy = new_instancemethod(_fem.GenericDofMap_copy, None, GenericDofMap)
GenericDofMap.create = new_instancemethod(_fem.GenericDofMap_create, None, GenericDofMap)
GenericDofMap.extract_sub_dofmap = new_instancemethod(_fem.GenericDofMap_extract_sub_dofmap, None, GenericDofMap)
GenericDofMap.collapse = new_instancemethod(_fem.GenericDofMap_collapse, None, GenericDofMap)
GenericDofMap.dofs = new_instancemethod(_fem.GenericDofMap_dofs, None, GenericDofMap)
GenericDofMap.set = new_instancemethod(_fem.GenericDofMap_set, None, GenericDofMap)
GenericDofMap.local_to_global_unowned = new_instancemethod(_fem.GenericDofMap_local_to_global_unowned, None, GenericDofMap)
GenericDofMap.index_map = new_instancemethod(_fem.GenericDofMap_index_map, None, GenericDofMap)
GenericDofMap.tabulate_local_to_global_dofs = new_instancemethod(_fem.GenericDofMap_tabulate_local_to_global_dofs, None, GenericDofMap)
GenericDofMap.local_to_global_index = new_instancemethod(_fem.GenericDofMap_local_to_global_index, None, GenericDofMap)
GenericDofMap.shared_nodes = new_instancemethod(_fem.GenericDofMap_shared_nodes, None, GenericDofMap)
GenericDofMap.neighbours = new_instancemethod(_fem.GenericDofMap_neighbours, None, GenericDofMap)
GenericDofMap.clear_sub_map_data = new_instancemethod(_fem.GenericDofMap_clear_sub_map_data, None, GenericDofMap)
GenericDofMap.block_size = new_instancemethod(_fem.GenericDofMap_block_size, None, GenericDofMap)
GenericDofMap._cell_dofs = new_instancemethod(_fem.GenericDofMap__cell_dofs, None, GenericDofMap)
GenericDofMap_swigregister = _fem.GenericDofMap_swigregister
GenericDofMap_swigregister(GenericDofMap)

class DofMap(GenericDofMap):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.DofMap_swiginit(self, _fem.new_DofMap(*args))
    __swig_destroy__ = _fem.delete_DofMap

    def entity_dofs(self, *args) -> "std::vector< dolfin::la_index >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DofMap_entity_dofs(self, *args)


    def entity_closure_dofs(self, *args) -> "std::vector< dolfin::la_index >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DofMap_entity_closure_dofs(self, *args)


    def dofs(self, *args) -> "std::vector< dolfin::la_index >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DofMap_dofs(self, *args)

DofMap.entity_dofs = new_instancemethod(_fem.DofMap_entity_dofs, None, DofMap)
DofMap.entity_closure_dofs = new_instancemethod(_fem.DofMap_entity_closure_dofs, None, DofMap)
DofMap.dofs = new_instancemethod(_fem.DofMap_dofs, None, DofMap)
DofMap_swigregister = _fem.DofMap_swigregister
DofMap_swigregister(DofMap)


def dof_to_vertex_map(space: 'FunctionSpace') -> "std::vector< std::size_t >":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.dof_to_vertex_map(space)

def vertex_to_dof_map(space: 'FunctionSpace') -> "std::vector< dolfin::la_index >":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.vertex_to_dof_map(space)

def set_coordinates(geometry: 'MeshGeometry', position: 'Function') -> "void":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.set_coordinates(geometry, position)

def get_coordinates(position: 'Function', geometry: 'MeshGeometry') -> "void":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.get_coordinates(position, geometry)

def create_mesh(coordinates: 'Function') -> "dolfin::Mesh":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.create_mesh(coordinates)
class Equation(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.Equation_swiginit(self, _fem.new_Equation(*args))
    __swig_destroy__ = _fem.delete_Equation

    def is_linear(self) -> "bool":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Equation_is_linear(self)


    def lhs(self) -> "std::shared_ptr< dolfin::Form const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Equation_lhs(self)


    def rhs(self) -> "std::shared_ptr< dolfin::Form const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Equation_rhs(self)


    def rhs_int(self) -> "int":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Equation_rhs_int(self)

Equation.is_linear = new_instancemethod(_fem.Equation_is_linear, None, Equation)
Equation.lhs = new_instancemethod(_fem.Equation_lhs, None, Equation)
Equation.rhs = new_instancemethod(_fem.Equation_rhs, None, Equation)
Equation.rhs_int = new_instancemethod(_fem.Equation_rhs_int, None, Equation)
Equation_swigregister = _fem.Equation_swigregister
Equation_swigregister(Equation)

class FiniteElement(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, element: 'std::shared_ptr< ufc::finite_element const >'):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.FiniteElement_swiginit(self, _fem.new_FiniteElement(element))
    __swig_destroy__ = _fem.delete_FiniteElement

    def signature(self) -> "std::string":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_signature(self)


    def cell_shape(self) -> "ufc::shape":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_cell_shape(self)


    def topological_dimension(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_topological_dimension(self)


    def geometric_dimension(self) -> "unsigned int":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_geometric_dimension(self)


    def space_dimension(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_space_dimension(self)


    def value_rank(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_value_rank(self)


    def value_dimension(self, i: 'std::size_t') -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_value_dimension(self, i)


    def evaluate_basis(self, i: 'std::size_t', values: 'double *', x: 'double const *', coordinate_dofs: 'double const *', cell_orientation: 'int') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_evaluate_basis(self, i, values, x, coordinate_dofs, cell_orientation)


    def evaluate_basis_all(self, values: 'double *', x: 'double const *', coordinate_dofs: 'double const *', cell_orientation: 'int') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_evaluate_basis_all(self, values, x, coordinate_dofs, cell_orientation)


    def evaluate_basis_derivatives(self, i: 'unsigned int', n: 'unsigned int', values: 'double *', x: 'double const *', coordinate_dofs: 'double const *', cell_orientation: 'int') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_evaluate_basis_derivatives(self, i, n, values, x, coordinate_dofs, cell_orientation)


    def evaluate_basis_derivatives_all(self, n: 'unsigned int', values: 'double *', x: 'double const *', coordinate_dofs: 'double const *', cell_orientation: 'int') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_evaluate_basis_derivatives_all(self, n, values, x, coordinate_dofs, cell_orientation)


    def evaluate_dof(self, i: 'std::size_t', function: 'ufc_function', coordinate_dofs: 'double const *', cell_orientation: 'int', c: 'ufc_cell') -> "double":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_evaluate_dof(self, i, function, coordinate_dofs, cell_orientation, c)


    def evaluate_dofs(self, values: 'double *', f: 'ufc_function', coordinate_dofs: 'double const *', cell_orientation: 'int', c: 'ufc_cell') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_evaluate_dofs(self, values, f, coordinate_dofs, cell_orientation, c)


    def interpolate_vertex_values(self, vertex_values: 'double *', coefficients: 'double *', coordinate_dofs: 'double const *', cell_orientation: 'int') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_interpolate_vertex_values(self, vertex_values, coefficients, coordinate_dofs, cell_orientation)


    def num_sub_elements(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_num_sub_elements(self)


    def hash(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_hash(self)


    def create_sub_element(self, i: 'std::size_t') -> "std::shared_ptr< dolfin::FiniteElement const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_create_sub_element(self, i)


    def create(self) -> "std::shared_ptr< dolfin::FiniteElement const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_create(self)


    def extract_sub_element(self, component: 'std::vector< std::size_t > const &') -> "std::shared_ptr< dolfin::FiniteElement const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_extract_sub_element(self, component)


    def ufc_element(self) -> "std::shared_ptr< ufc::finite_element const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.FiniteElement_ufc_element(self)


    def tabulate_dof_coordinates(self, cell, coordinates=None):
        """ Tabulate the coordinates of all dofs on a cell

        *Arguments*
            cell (_Cell_)
                 The cell.
            coordinates (NumPy array)
                 Optional argument: The coordinates of all dofs on a cell.
        *Returns*
            coordinates
                 The coordinates of all dofs on a cell.
        """
        import numpy as np

    # Check coordinate argument
        gdim = self.geometric_dimension()
        shape = (self.space_dimension(), gdim)
        if coordinates is None:
            coordinates = np.zeros(shape, 'd')
        if not isinstance(coordinates, np.ndarray) or \
           not (coordinates.flags.c_contiguous and \
                coordinates.dtype == np.dtype('d') and \
                coordinates.shape==shape):
            raise TypeError("expected a C-contiguous numpy array " \
                  "of 'double' (dtype='d') with shape %s"%str(shape))

    # Call the extended method
        self._tabulate_dof_coordinates(coordinates, cell)
        return coordinates

FiniteElement.signature = new_instancemethod(_fem.FiniteElement_signature, None, FiniteElement)
FiniteElement.cell_shape = new_instancemethod(_fem.FiniteElement_cell_shape, None, FiniteElement)
FiniteElement.topological_dimension = new_instancemethod(_fem.FiniteElement_topological_dimension, None, FiniteElement)
FiniteElement.geometric_dimension = new_instancemethod(_fem.FiniteElement_geometric_dimension, None, FiniteElement)
FiniteElement.space_dimension = new_instancemethod(_fem.FiniteElement_space_dimension, None, FiniteElement)
FiniteElement.value_rank = new_instancemethod(_fem.FiniteElement_value_rank, None, FiniteElement)
FiniteElement.value_dimension = new_instancemethod(_fem.FiniteElement_value_dimension, None, FiniteElement)
FiniteElement.evaluate_basis = new_instancemethod(_fem.FiniteElement_evaluate_basis, None, FiniteElement)
FiniteElement.evaluate_basis_all = new_instancemethod(_fem.FiniteElement_evaluate_basis_all, None, FiniteElement)
FiniteElement.evaluate_basis_derivatives = new_instancemethod(_fem.FiniteElement_evaluate_basis_derivatives, None, FiniteElement)
FiniteElement.evaluate_basis_derivatives_all = new_instancemethod(_fem.FiniteElement_evaluate_basis_derivatives_all, None, FiniteElement)
FiniteElement.evaluate_dof = new_instancemethod(_fem.FiniteElement_evaluate_dof, None, FiniteElement)
FiniteElement.evaluate_dofs = new_instancemethod(_fem.FiniteElement_evaluate_dofs, None, FiniteElement)
FiniteElement.interpolate_vertex_values = new_instancemethod(_fem.FiniteElement_interpolate_vertex_values, None, FiniteElement)
FiniteElement.num_sub_elements = new_instancemethod(_fem.FiniteElement_num_sub_elements, None, FiniteElement)
FiniteElement.hash = new_instancemethod(_fem.FiniteElement_hash, None, FiniteElement)
FiniteElement.create_sub_element = new_instancemethod(_fem.FiniteElement_create_sub_element, None, FiniteElement)
FiniteElement.create = new_instancemethod(_fem.FiniteElement_create, None, FiniteElement)
FiniteElement.extract_sub_element = new_instancemethod(_fem.FiniteElement_extract_sub_element, None, FiniteElement)
FiniteElement.ufc_element = new_instancemethod(_fem.FiniteElement_ufc_element, None, FiniteElement)
FiniteElement._tabulate_dof_coordinates = new_instancemethod(_fem.FiniteElement__tabulate_dof_coordinates, None, FiniteElement)
FiniteElement_swigregister = _fem.FiniteElement_swigregister
FiniteElement_swigregister(FiniteElement)

class BasisFunction(ufc_function):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, index: 'std::size_t', element: 'std::shared_ptr< dolfin::FiniteElement const >', coordinate_dofs: 'std::vector< double > const &'):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.BasisFunction_swiginit(self, _fem.new_BasisFunction(index, element, coordinate_dofs))
    __swig_destroy__ = _fem.delete_BasisFunction

    def update_index(self, index: 'std::size_t') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.BasisFunction_update_index(self, index)


    def eval(self, values: 'double *', x: 'double const *') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.BasisFunction_eval(self, values, x)


    def eval_derivatives(self, values: 'double *', x: 'double const *', n: 'std::size_t') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.BasisFunction_eval_derivatives(self, values, x, n)

BasisFunction.update_index = new_instancemethod(_fem.BasisFunction_update_index, None, BasisFunction)
BasisFunction.eval = new_instancemethod(_fem.BasisFunction_eval, None, BasisFunction)
BasisFunction.eval_derivatives = new_instancemethod(_fem.BasisFunction_eval_derivatives, None, BasisFunction)
BasisFunction_swigregister = _fem.BasisFunction_swigregister
BasisFunction_swigregister(BasisFunction)

class DiscreteOperators(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def build_gradient(V0: 'FunctionSpace', V1: 'FunctionSpace') -> "std::shared_ptr< dolfin::GenericMatrix >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DiscreteOperators_build_gradient(V0, V1)

    build_gradient = staticmethod(build_gradient)

    def __init__(self):
        _fem.DiscreteOperators_swiginit(self, _fem.new_DiscreteOperators())
    __swig_destroy__ = _fem.delete_DiscreteOperators
DiscreteOperators_swigregister = _fem.DiscreteOperators_swigregister
DiscreteOperators_swigregister(DiscreteOperators)

def DiscreteOperators_build_gradient(V0: 'FunctionSpace', V1: 'FunctionSpace') -> "std::shared_ptr< dolfin::GenericMatrix >":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.DiscreteOperators_build_gradient(V0, V1)

class DirichletBC(HierarchicalDirichletBC, common.Variable):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.DirichletBC_swiginit(self, _fem.new_DirichletBC(*args))
    __swig_destroy__ = _fem.delete_DirichletBC

    def apply(self, *args) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DirichletBC_apply(self, *args)


    def get_boundary_values(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DirichletBC_get_boundary_values(self)


    def zero(self, A: 'GenericMatrix') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DirichletBC_zero(self, A)


    def zero_columns(self, A: 'GenericMatrix', b: 'GenericVector', diag_val: 'double'=0) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DirichletBC_zero_columns(self, A, b, diag_val)


    def markers(self) -> "std::vector< std::size_t > const &":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DirichletBC_markers(self)


    def _function_space(self) -> "std::shared_ptr< dolfin::FunctionSpace const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DirichletBC__function_space(self)


    def value(self) -> "std::shared_ptr< dolfin::GenericFunction const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DirichletBC_value(self)


    def user_sub_domain(self) -> "std::shared_ptr< dolfin::SubDomain const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DirichletBC_user_sub_domain(self)


    def set_value(self, g: 'std::shared_ptr< dolfin::GenericFunction const >') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DirichletBC_set_value(self, g)


    def homogenize(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DirichletBC_homogenize(self)


    def method(self) -> "std::string":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DirichletBC_method(self)


    def default_parameters() -> "dolfin::Parameters":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.DirichletBC_default_parameters()

    default_parameters = staticmethod(default_parameters)
    _user_sub_domain = _swig_property(_fem.DirichletBC__user_sub_domain_get, _fem.DirichletBC__user_sub_domain_set)

    def function_space(self):
        "Return the FunctionSpace"
        from dolfin.functions.functionspace import FunctionSpace
        return FunctionSpace(self._function_space())

DirichletBC.apply = new_instancemethod(_fem.DirichletBC_apply, None, DirichletBC)
DirichletBC.get_boundary_values = new_instancemethod(_fem.DirichletBC_get_boundary_values, None, DirichletBC)
DirichletBC.zero = new_instancemethod(_fem.DirichletBC_zero, None, DirichletBC)
DirichletBC.zero_columns = new_instancemethod(_fem.DirichletBC_zero_columns, None, DirichletBC)
DirichletBC.markers = new_instancemethod(_fem.DirichletBC_markers, None, DirichletBC)
DirichletBC._function_space = new_instancemethod(_fem.DirichletBC__function_space, None, DirichletBC)
DirichletBC.value = new_instancemethod(_fem.DirichletBC_value, None, DirichletBC)
DirichletBC.user_sub_domain = new_instancemethod(_fem.DirichletBC_user_sub_domain, None, DirichletBC)
DirichletBC.set_value = new_instancemethod(_fem.DirichletBC_set_value, None, DirichletBC)
DirichletBC.homogenize = new_instancemethod(_fem.DirichletBC_homogenize, None, DirichletBC)
DirichletBC.method = new_instancemethod(_fem.DirichletBC_method, None, DirichletBC)
DirichletBC_swigregister = _fem.DirichletBC_swigregister
DirichletBC_swigregister(DirichletBC)

def DirichletBC_default_parameters() -> "dolfin::Parameters":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.DirichletBC_default_parameters()

class PointSource(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.PointSource_swiginit(self, _fem.new_PointSource(*args))
    __swig_destroy__ = _fem.delete_PointSource

    def apply(self, *args) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.PointSource_apply(self, *args)

PointSource.apply = new_instancemethod(_fem.PointSource_apply, None, PointSource)
PointSource_swigregister = _fem.PointSource_swigregister
PointSource_swigregister(PointSource)


def assemble_system(*args) -> "void":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.assemble_system(*args)

def assemble(*args) -> "double":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.assemble(*args)

def assemble_multimesh(*args) -> "double":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.assemble_multimesh(*args)

def assemble_local(a: 'Form', cell: 'Cell') -> "std::vector< double > &":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.assemble_local(a, cell)
class LocalAssembler(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def assemble(A: 'Eigen::Matrix< double,Eigen::Dynamic,Eigen::Dynamic,Eigen::RowMajor > &', ufc: 'dolfin::UFC &', coordinate_dofs: 'std::vector< double > const &', ufc_cell: 'ufc_cell', cell: 'Cell', cell_domains: 'dolfin::MeshFunction< std::size_t > const *', exterior_facet_domains: 'dolfin::MeshFunction< std::size_t > const *', interior_facet_domains: 'dolfin::MeshFunction< std::size_t > const *') -> "std::vector< double > &":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LocalAssembler_assemble(A, ufc, coordinate_dofs, ufc_cell, cell, cell_domains, exterior_facet_domains, interior_facet_domains)

    assemble = staticmethod(assemble)

    def assemble_cell(A: 'Eigen::Matrix< double,Eigen::Dynamic,Eigen::Dynamic,Eigen::RowMajor > &', ufc: 'dolfin::UFC &', coordinate_dofs: 'std::vector< double > const &', ufc_cell: 'ufc_cell', cell: 'Cell', cell_domains: 'dolfin::MeshFunction< std::size_t > const *') -> "std::vector< double > &":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LocalAssembler_assemble_cell(A, ufc, coordinate_dofs, ufc_cell, cell, cell_domains)

    assemble_cell = staticmethod(assemble_cell)

    def assemble_exterior_facet(A: 'Eigen::Matrix< double,Eigen::Dynamic,Eigen::Dynamic,Eigen::RowMajor > &', ufc: 'dolfin::UFC &', coordinate_dofs: 'std::vector< double > const &', ufc_cell: 'ufc_cell', cell: 'Cell', facet: 'Facet', local_facet: 'std::size_t const', exterior_facet_domains: 'dolfin::MeshFunction< std::size_t > const *') -> "std::vector< double > &":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LocalAssembler_assemble_exterior_facet(A, ufc, coordinate_dofs, ufc_cell, cell, facet, local_facet, exterior_facet_domains)

    assemble_exterior_facet = staticmethod(assemble_exterior_facet)

    def assemble_interior_facet(A: 'Eigen::Matrix< double,Eigen::Dynamic,Eigen::Dynamic,Eigen::RowMajor > &', ufc: 'dolfin::UFC &', coordinate_dofs: 'std::vector< double > const &', ufc_cell: 'ufc_cell', cell: 'Cell', facet: 'Facet', local_facet: 'std::size_t const', interior_facet_domains: 'dolfin::MeshFunction< std::size_t > const *', cell_domains: 'dolfin::MeshFunction< std::size_t > const *') -> "std::vector< double > &":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LocalAssembler_assemble_interior_facet(A, ufc, coordinate_dofs, ufc_cell, cell, facet, local_facet, interior_facet_domains, cell_domains)

    assemble_interior_facet = staticmethod(assemble_interior_facet)

    def __init__(self):
        _fem.LocalAssembler_swiginit(self, _fem.new_LocalAssembler())
    __swig_destroy__ = _fem.delete_LocalAssembler
LocalAssembler_swigregister = _fem.LocalAssembler_swigregister
LocalAssembler_swigregister(LocalAssembler)

def LocalAssembler_assemble(A: 'Eigen::Matrix< double,Eigen::Dynamic,Eigen::Dynamic,Eigen::RowMajor > &', ufc: 'dolfin::UFC &', coordinate_dofs: 'std::vector< double > const &', ufc_cell: 'ufc_cell', cell: 'Cell', cell_domains: 'dolfin::MeshFunction< std::size_t > const *', exterior_facet_domains: 'dolfin::MeshFunction< std::size_t > const *', interior_facet_domains: 'dolfin::MeshFunction< std::size_t > const *') -> "std::vector< double > &":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.LocalAssembler_assemble(A, ufc, coordinate_dofs, ufc_cell, cell, cell_domains, exterior_facet_domains, interior_facet_domains)

def LocalAssembler_assemble_cell(A: 'Eigen::Matrix< double,Eigen::Dynamic,Eigen::Dynamic,Eigen::RowMajor > &', ufc: 'dolfin::UFC &', coordinate_dofs: 'std::vector< double > const &', ufc_cell: 'ufc_cell', cell: 'Cell', cell_domains: 'dolfin::MeshFunction< std::size_t > const *') -> "std::vector< double > &":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.LocalAssembler_assemble_cell(A, ufc, coordinate_dofs, ufc_cell, cell, cell_domains)

def LocalAssembler_assemble_exterior_facet(A: 'Eigen::Matrix< double,Eigen::Dynamic,Eigen::Dynamic,Eigen::RowMajor > &', ufc: 'dolfin::UFC &', coordinate_dofs: 'std::vector< double > const &', ufc_cell: 'ufc_cell', cell: 'Cell', facet: 'Facet', local_facet: 'std::size_t const', exterior_facet_domains: 'dolfin::MeshFunction< std::size_t > const *') -> "std::vector< double > &":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.LocalAssembler_assemble_exterior_facet(A, ufc, coordinate_dofs, ufc_cell, cell, facet, local_facet, exterior_facet_domains)

def LocalAssembler_assemble_interior_facet(A: 'Eigen::Matrix< double,Eigen::Dynamic,Eigen::Dynamic,Eigen::RowMajor > &', ufc: 'dolfin::UFC &', coordinate_dofs: 'std::vector< double > const &', ufc_cell: 'ufc_cell', cell: 'Cell', facet: 'Facet', local_facet: 'std::size_t const', interior_facet_domains: 'dolfin::MeshFunction< std::size_t > const *', cell_domains: 'dolfin::MeshFunction< std::size_t > const *') -> "std::vector< double > &":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.LocalAssembler_assemble_interior_facet(A, ufc, coordinate_dofs, ufc_cell, cell, facet, local_facet, interior_facet_domains, cell_domains)

class LocalSolver(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    SolverType_LU = _fem.LocalSolver_SolverType_LU
    SolverType_Cholesky = _fem.LocalSolver_SolverType_Cholesky

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.LocalSolver_swiginit(self, _fem.new_LocalSolver(*args))

    def solve_global_rhs(self, u: 'Function') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LocalSolver_solve_global_rhs(self, u)


    def solve_local_rhs(self, u: 'Function') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LocalSolver_solve_local_rhs(self, u)


    def solve_local(self, x: 'GenericVector', b: 'GenericVector', dofmap_b: 'GenericDofMap') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LocalSolver_solve_local(self, x, b, dofmap_b)


    def factorize(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LocalSolver_factorize(self)


    def clear_factorization(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LocalSolver_clear_factorization(self)

    __swig_destroy__ = _fem.delete_LocalSolver
LocalSolver.solve_global_rhs = new_instancemethod(_fem.LocalSolver_solve_global_rhs, None, LocalSolver)
LocalSolver.solve_local_rhs = new_instancemethod(_fem.LocalSolver_solve_local_rhs, None, LocalSolver)
LocalSolver.solve_local = new_instancemethod(_fem.LocalSolver_solve_local, None, LocalSolver)
LocalSolver.factorize = new_instancemethod(_fem.LocalSolver_factorize, None, LocalSolver)
LocalSolver.clear_factorization = new_instancemethod(_fem.LocalSolver_clear_factorization, None, LocalSolver)
LocalSolver_swigregister = _fem.LocalSolver_swigregister
LocalSolver_swigregister(LocalSolver)

class Form(HierarchicalForm):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.Form_swiginit(self, _fem.new_Form(*args))
    __swig_destroy__ = _fem.delete_Form

    def rank(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_rank(self)


    def num_coefficients(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_num_coefficients(self)


    def original_coefficient_position(self, i: 'std::size_t') -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_original_coefficient_position(self, i)


    def coloring(self, entity_dim: 'std::size_t') -> "std::vector< std::size_t >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_coloring(self, entity_dim)


    def set_mesh(self, mesh: 'std::shared_ptr< dolfin::Mesh const >') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_set_mesh(self, mesh)


    def mesh(self) -> "std::shared_ptr< dolfin::Mesh const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_mesh(self)


    def _function_space(self, i: 'std::size_t') -> "std::shared_ptr< dolfin::FunctionSpace const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form__function_space(self, i)


    def function_spaces(self) -> "std::vector< std::shared_ptr< dolfin::FunctionSpace const > >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_function_spaces(self)


    def set_coefficient(self, *args) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_set_coefficient(self, *args)


    def set_coefficients(self, coefficients: 'std::map< std::string,std::shared_ptr< dolfin::GenericFunction const > >') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_set_coefficients(self, coefficients)


    def set_some_coefficients(self, coefficients: 'std::map< std::string,std::shared_ptr< dolfin::GenericFunction const > >') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_set_some_coefficients(self, coefficients)


    def coefficient(self, *args) -> "std::shared_ptr< dolfin::GenericFunction const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_coefficient(self, *args)


    def coefficients(self) -> "std::vector< std::shared_ptr< dolfin::GenericFunction const > >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_coefficients(self)


    def coefficient_number(self, name: 'std::string const &') -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_coefficient_number(self, name)


    def coefficient_name(self, i: 'std::size_t') -> "std::string":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_coefficient_name(self, i)


    def cell_domains(self) -> "std::shared_ptr< dolfin::MeshFunction< std::size_t > const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_cell_domains(self)


    def exterior_facet_domains(self) -> "std::shared_ptr< dolfin::MeshFunction< std::size_t > const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_exterior_facet_domains(self)


    def interior_facet_domains(self) -> "std::shared_ptr< dolfin::MeshFunction< std::size_t > const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_interior_facet_domains(self)


    def vertex_domains(self) -> "std::shared_ptr< dolfin::MeshFunction< std::size_t > const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_vertex_domains(self)


    def set_cell_domains(self, cell_domains: 'std::shared_ptr< dolfin::MeshFunction< std::size_t > const >') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_set_cell_domains(self, cell_domains)


    def set_exterior_facet_domains(self, exterior_facet_domains: 'std::shared_ptr< dolfin::MeshFunction< std::size_t > const >') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_set_exterior_facet_domains(self, exterior_facet_domains)


    def set_interior_facet_domains(self, interior_facet_domains: 'std::shared_ptr< dolfin::MeshFunction< std::size_t > const >') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_set_interior_facet_domains(self, interior_facet_domains)


    def set_vertex_domains(self, vertex_domains: 'std::shared_ptr< dolfin::MeshFunction< std::size_t > const >') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_set_vertex_domains(self, vertex_domains)


    def ufc_form(self) -> "std::shared_ptr< ufc::form const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_ufc_form(self)


    def check(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Form_check(self)


    def function_space(self, i):
        """
        Return function space for given argument

         *Arguments*
             i (std::size_t)
                 Index

         *Returns*
             _FunctionSpace_
                 Function space shared pointer.
        """
        from dolfin.functions.functionspace import FunctionSpace
        return FunctionSpace(self._function_space(i))

Form.rank = new_instancemethod(_fem.Form_rank, None, Form)
Form.num_coefficients = new_instancemethod(_fem.Form_num_coefficients, None, Form)
Form.original_coefficient_position = new_instancemethod(_fem.Form_original_coefficient_position, None, Form)
Form.coloring = new_instancemethod(_fem.Form_coloring, None, Form)
Form.set_mesh = new_instancemethod(_fem.Form_set_mesh, None, Form)
Form.mesh = new_instancemethod(_fem.Form_mesh, None, Form)
Form._function_space = new_instancemethod(_fem.Form__function_space, None, Form)
Form.function_spaces = new_instancemethod(_fem.Form_function_spaces, None, Form)
Form.set_coefficient = new_instancemethod(_fem.Form_set_coefficient, None, Form)
Form.set_coefficients = new_instancemethod(_fem.Form_set_coefficients, None, Form)
Form.set_some_coefficients = new_instancemethod(_fem.Form_set_some_coefficients, None, Form)
Form.coefficient = new_instancemethod(_fem.Form_coefficient, None, Form)
Form.coefficients = new_instancemethod(_fem.Form_coefficients, None, Form)
Form.coefficient_number = new_instancemethod(_fem.Form_coefficient_number, None, Form)
Form.coefficient_name = new_instancemethod(_fem.Form_coefficient_name, None, Form)
Form.cell_domains = new_instancemethod(_fem.Form_cell_domains, None, Form)
Form.exterior_facet_domains = new_instancemethod(_fem.Form_exterior_facet_domains, None, Form)
Form.interior_facet_domains = new_instancemethod(_fem.Form_interior_facet_domains, None, Form)
Form.vertex_domains = new_instancemethod(_fem.Form_vertex_domains, None, Form)
Form.set_cell_domains = new_instancemethod(_fem.Form_set_cell_domains, None, Form)
Form.set_exterior_facet_domains = new_instancemethod(_fem.Form_set_exterior_facet_domains, None, Form)
Form.set_interior_facet_domains = new_instancemethod(_fem.Form_set_interior_facet_domains, None, Form)
Form.set_vertex_domains = new_instancemethod(_fem.Form_set_vertex_domains, None, Form)
Form.ufc_form = new_instancemethod(_fem.Form_ufc_form, None, Form)
Form.check = new_instancemethod(_fem.Form_check, None, Form)
Form_swigregister = _fem.Form_swigregister
Form_swigregister(Form)

class AssemblerBase(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.AssemblerBase_swiginit(self, _fem.new_AssemblerBase())
    add_values = _swig_property(_fem.AssemblerBase_add_values_get, _fem.AssemblerBase_add_values_set)
    finalize_tensor = _swig_property(_fem.AssemblerBase_finalize_tensor_get, _fem.AssemblerBase_finalize_tensor_set)
    keep_diagonal = _swig_property(_fem.AssemblerBase_keep_diagonal_get, _fem.AssemblerBase_keep_diagonal_set)

    def init_global_tensor(self, A: 'GenericTensor', a: 'Form') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.AssemblerBase_init_global_tensor(self, A, a)

    __swig_destroy__ = _fem.delete_AssemblerBase
AssemblerBase.init_global_tensor = new_instancemethod(_fem.AssemblerBase_init_global_tensor, None, AssemblerBase)
AssemblerBase_swigregister = _fem.AssemblerBase_swigregister
AssemblerBase_swigregister(AssemblerBase)

class Assembler(AssemblerBase):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.Assembler_swiginit(self, _fem.new_Assembler())

    def assemble(self, A: 'GenericTensor', a: 'Form') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Assembler_assemble(self, A, a)


    def assemble_cells(self, A: 'GenericTensor', a: 'Form', ufc: 'dolfin::UFC &', domains: 'std::shared_ptr< dolfin::MeshFunction< std::size_t > const >', values: 'std::vector< double > *') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Assembler_assemble_cells(self, A, a, ufc, domains, values)


    def assemble_exterior_facets(self, A: 'GenericTensor', a: 'Form', ufc: 'dolfin::UFC &', domains: 'std::shared_ptr< dolfin::MeshFunction< std::size_t > const >', values: 'std::vector< double > *') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Assembler_assemble_exterior_facets(self, A, a, ufc, domains, values)


    def assemble_interior_facets(self, A: 'GenericTensor', a: 'Form', ufc: 'dolfin::UFC &', domains: 'std::shared_ptr< dolfin::MeshFunction< std::size_t > const >', cell_domains: 'std::shared_ptr< dolfin::MeshFunction< std::size_t > const >', values: 'std::vector< double > *') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Assembler_assemble_interior_facets(self, A, a, ufc, domains, cell_domains, values)


    def assemble_vertices(self, A: 'GenericTensor', a: 'Form', ufc: 'dolfin::UFC &', domains: 'std::shared_ptr< dolfin::MeshFunction< std::size_t > const >') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Assembler_assemble_vertices(self, A, a, ufc, domains)

    __swig_destroy__ = _fem.delete_Assembler
Assembler.assemble = new_instancemethod(_fem.Assembler_assemble, None, Assembler)
Assembler.assemble_cells = new_instancemethod(_fem.Assembler_assemble_cells, None, Assembler)
Assembler.assemble_exterior_facets = new_instancemethod(_fem.Assembler_assemble_exterior_facets, None, Assembler)
Assembler.assemble_interior_facets = new_instancemethod(_fem.Assembler_assemble_interior_facets, None, Assembler)
Assembler.assemble_vertices = new_instancemethod(_fem.Assembler_assemble_vertices, None, Assembler)
Assembler_swigregister = _fem.Assembler_swigregister
Assembler_swigregister(Assembler)

class SparsityPatternBuilder(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def build(sparsity_pattern: 'SparsityPattern', mesh: 'Mesh', dofmaps: 'std::vector< dolfin::GenericDofMap const * > const', cells: 'bool', interior_facets: 'bool', exterior_facets: 'bool', vertices: 'bool', diagonal: 'bool', init: 'bool'=True, finalize: 'bool'=True) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.SparsityPatternBuilder_build(sparsity_pattern, mesh, dofmaps, cells, interior_facets, exterior_facets, vertices, diagonal, init, finalize)

    build = staticmethod(build)

    def build_multimesh_sparsity_pattern(sparsity_pattern: 'SparsityPattern', form: 'MultiMeshForm') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.SparsityPatternBuilder_build_multimesh_sparsity_pattern(sparsity_pattern, form)

    build_multimesh_sparsity_pattern = staticmethod(build_multimesh_sparsity_pattern)

    def __init__(self):
        _fem.SparsityPatternBuilder_swiginit(self, _fem.new_SparsityPatternBuilder())
    __swig_destroy__ = _fem.delete_SparsityPatternBuilder
SparsityPatternBuilder_swigregister = _fem.SparsityPatternBuilder_swigregister
SparsityPatternBuilder_swigregister(SparsityPatternBuilder)

def SparsityPatternBuilder_build(sparsity_pattern: 'SparsityPattern', mesh: 'Mesh', dofmaps: 'std::vector< dolfin::GenericDofMap const * > const', cells: 'bool', interior_facets: 'bool', exterior_facets: 'bool', vertices: 'bool', diagonal: 'bool', init: 'bool'=True, finalize: 'bool'=True) -> "void":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.SparsityPatternBuilder_build(sparsity_pattern, mesh, dofmaps, cells, interior_facets, exterior_facets, vertices, diagonal, init, finalize)

def SparsityPatternBuilder_build_multimesh_sparsity_pattern(sparsity_pattern: 'SparsityPattern', form: 'MultiMeshForm') -> "void":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.SparsityPatternBuilder_build_multimesh_sparsity_pattern(sparsity_pattern, form)

class SystemAssembler(AssemblerBase):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, a: 'std::shared_ptr< dolfin::Form const >', L: 'std::shared_ptr< dolfin::Form const >', bcs: 'std::vector< std::shared_ptr< dolfin::DirichletBC const > >'):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.SystemAssembler_swiginit(self, _fem.new_SystemAssembler(a, L, bcs))

    def assemble(self, *args) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.SystemAssembler_assemble(self, *args)

    __swig_destroy__ = _fem.delete_SystemAssembler
SystemAssembler.assemble = new_instancemethod(_fem.SystemAssembler_assemble, None, SystemAssembler)
SystemAssembler_swigregister = _fem.SystemAssembler_swigregister
SystemAssembler_swigregister(SystemAssembler)

class LinearVariationalProblem(HierarchicalLinearVariationalProblem):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, a: 'std::shared_ptr< dolfin::Form const >', L: 'std::shared_ptr< dolfin::Form const >', u: 'std::shared_ptr< dolfin::Function >', bcs: 'std::vector< std::shared_ptr< dolfin::DirichletBC const > >'):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.LinearVariationalProblem_swiginit(self, _fem.new_LinearVariationalProblem(a, L, u, bcs))

    def bilinear_form(self) -> "std::shared_ptr< dolfin::Form const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LinearVariationalProblem_bilinear_form(self)


    def linear_form(self) -> "std::shared_ptr< dolfin::Form const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LinearVariationalProblem_linear_form(self)


    def _solution(self, *args) -> "std::shared_ptr< dolfin::Function const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LinearVariationalProblem__solution(self, *args)


    def bcs(self) -> "std::vector< std::shared_ptr< dolfin::DirichletBC const > >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LinearVariationalProblem_bcs(self)


    def _trial_space(self) -> "std::shared_ptr< dolfin::FunctionSpace const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LinearVariationalProblem__trial_space(self)


    def _test_space(self) -> "std::shared_ptr< dolfin::FunctionSpace const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LinearVariationalProblem__test_space(self)


    def solution(self):
        """
        Return the solution
        """
        from dolfin.functions.function import Function
        return Function(self._solution())

    def trial_space(self):
        """
        Return the trial space
        """
        from dolfin.functions.functionspace import FunctionSpace
        return FunctionSpace(self._trial_space())

    def test_space(self):
        """
        Return the test space
        """
        from dolfin.functions.functionspace import FunctionSpace
        return FunctionSpace(self._test_space())


    __swig_destroy__ = _fem.delete_LinearVariationalProblem
LinearVariationalProblem.bilinear_form = new_instancemethod(_fem.LinearVariationalProblem_bilinear_form, None, LinearVariationalProblem)
LinearVariationalProblem.linear_form = new_instancemethod(_fem.LinearVariationalProblem_linear_form, None, LinearVariationalProblem)
LinearVariationalProblem._solution = new_instancemethod(_fem.LinearVariationalProblem__solution, None, LinearVariationalProblem)
LinearVariationalProblem.bcs = new_instancemethod(_fem.LinearVariationalProblem_bcs, None, LinearVariationalProblem)
LinearVariationalProblem._trial_space = new_instancemethod(_fem.LinearVariationalProblem__trial_space, None, LinearVariationalProblem)
LinearVariationalProblem._test_space = new_instancemethod(_fem.LinearVariationalProblem__test_space, None, LinearVariationalProblem)
LinearVariationalProblem_swigregister = _fem.LinearVariationalProblem_swigregister
LinearVariationalProblem_swigregister(LinearVariationalProblem)

class LinearVariationalSolver(common.Variable):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, problem: 'std::shared_ptr< dolfin::LinearVariationalProblem >'):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.LinearVariationalSolver_swiginit(self, _fem.new_LinearVariationalSolver(problem))

    def solve(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LinearVariationalSolver_solve(self)


    def default_parameters() -> "dolfin::Parameters":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.LinearVariationalSolver_default_parameters()

    default_parameters = staticmethod(default_parameters)
    __swig_destroy__ = _fem.delete_LinearVariationalSolver
LinearVariationalSolver.solve = new_instancemethod(_fem.LinearVariationalSolver_solve, None, LinearVariationalSolver)
LinearVariationalSolver_swigregister = _fem.LinearVariationalSolver_swigregister
LinearVariationalSolver_swigregister(LinearVariationalSolver)

def LinearVariationalSolver_default_parameters() -> "dolfin::Parameters":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.LinearVariationalSolver_default_parameters()

class NonlinearVariationalProblem(HierarchicalNonlinearVariationalProblem):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, F: 'std::shared_ptr< dolfin::Form const >', u: 'std::shared_ptr< dolfin::Function >', bcs: 'std::vector< std::shared_ptr< dolfin::DirichletBC const > >', J: 'std::shared_ptr< dolfin::Form const >'=0):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.NonlinearVariationalProblem_swiginit(self, _fem.new_NonlinearVariationalProblem(F, u, bcs, J))

    def set_bounds(self, *args) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.NonlinearVariationalProblem_set_bounds(self, *args)


    def residual_form(self) -> "std::shared_ptr< dolfin::Form const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.NonlinearVariationalProblem_residual_form(self)


    def jacobian_form(self) -> "std::shared_ptr< dolfin::Form const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.NonlinearVariationalProblem_jacobian_form(self)


    def _solution(self, *args) -> "std::shared_ptr< dolfin::Function const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.NonlinearVariationalProblem__solution(self, *args)


    def bcs(self) -> "std::vector< std::shared_ptr< dolfin::DirichletBC const > >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.NonlinearVariationalProblem_bcs(self)


    def _trial_space(self) -> "std::shared_ptr< dolfin::FunctionSpace const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.NonlinearVariationalProblem__trial_space(self)


    def _test_space(self) -> "std::shared_ptr< dolfin::FunctionSpace const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.NonlinearVariationalProblem__test_space(self)


    def lower_bound(self) -> "std::shared_ptr< dolfin::GenericVector const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.NonlinearVariationalProblem_lower_bound(self)


    def upper_bound(self) -> "std::shared_ptr< dolfin::GenericVector const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.NonlinearVariationalProblem_upper_bound(self)


    def has_jacobian(self) -> "bool":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.NonlinearVariationalProblem_has_jacobian(self)


    def has_lower_bound(self) -> "bool":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.NonlinearVariationalProblem_has_lower_bound(self)


    def has_upper_bound(self) -> "bool":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.NonlinearVariationalProblem_has_upper_bound(self)


    def solution(self):
        """
        Return the solution
        """
        from dolfin.functions.function import Function
        return Function(self._solution())

    def trial_space(self):
        """
        Return the trial space
        """
        from dolfin.functions.functionspace import FunctionSpace
        return FunctionSpace(self._trial_space())

    def test_space(self):
        """
        Return the test space
        """
        from dolfin.functions.functionspace import FunctionSpace
        return FunctionSpace(self._test_space())


    __swig_destroy__ = _fem.delete_NonlinearVariationalProblem
NonlinearVariationalProblem.set_bounds = new_instancemethod(_fem.NonlinearVariationalProblem_set_bounds, None, NonlinearVariationalProblem)
NonlinearVariationalProblem.residual_form = new_instancemethod(_fem.NonlinearVariationalProblem_residual_form, None, NonlinearVariationalProblem)
NonlinearVariationalProblem.jacobian_form = new_instancemethod(_fem.NonlinearVariationalProblem_jacobian_form, None, NonlinearVariationalProblem)
NonlinearVariationalProblem._solution = new_instancemethod(_fem.NonlinearVariationalProblem__solution, None, NonlinearVariationalProblem)
NonlinearVariationalProblem.bcs = new_instancemethod(_fem.NonlinearVariationalProblem_bcs, None, NonlinearVariationalProblem)
NonlinearVariationalProblem._trial_space = new_instancemethod(_fem.NonlinearVariationalProblem__trial_space, None, NonlinearVariationalProblem)
NonlinearVariationalProblem._test_space = new_instancemethod(_fem.NonlinearVariationalProblem__test_space, None, NonlinearVariationalProblem)
NonlinearVariationalProblem.lower_bound = new_instancemethod(_fem.NonlinearVariationalProblem_lower_bound, None, NonlinearVariationalProblem)
NonlinearVariationalProblem.upper_bound = new_instancemethod(_fem.NonlinearVariationalProblem_upper_bound, None, NonlinearVariationalProblem)
NonlinearVariationalProblem.has_jacobian = new_instancemethod(_fem.NonlinearVariationalProblem_has_jacobian, None, NonlinearVariationalProblem)
NonlinearVariationalProblem.has_lower_bound = new_instancemethod(_fem.NonlinearVariationalProblem_has_lower_bound, None, NonlinearVariationalProblem)
NonlinearVariationalProblem.has_upper_bound = new_instancemethod(_fem.NonlinearVariationalProblem_has_upper_bound, None, NonlinearVariationalProblem)
NonlinearVariationalProblem_swigregister = _fem.NonlinearVariationalProblem_swigregister
NonlinearVariationalProblem_swigregister(NonlinearVariationalProblem)

class NonlinearVariationalSolver(common.Variable):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, problem: 'std::shared_ptr< dolfin::NonlinearVariationalProblem >'):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.NonlinearVariationalSolver_swiginit(self, _fem.new_NonlinearVariationalSolver(problem))

    def solve(self) -> "std::pair< std::size_t,bool >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.NonlinearVariationalSolver_solve(self)


    def default_parameters() -> "dolfin::Parameters":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.NonlinearVariationalSolver_default_parameters()

    default_parameters = staticmethod(default_parameters)
    __swig_destroy__ = _fem.delete_NonlinearVariationalSolver
NonlinearVariationalSolver.solve = new_instancemethod(_fem.NonlinearVariationalSolver_solve, None, NonlinearVariationalSolver)
NonlinearVariationalSolver_swigregister = _fem.NonlinearVariationalSolver_swigregister
NonlinearVariationalSolver_swigregister(NonlinearVariationalSolver)

def NonlinearVariationalSolver_default_parameters() -> "dolfin::Parameters":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.NonlinearVariationalSolver_default_parameters()

class MultiMeshAssembler(AssemblerBase):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.MultiMeshAssembler_swiginit(self, _fem.new_MultiMeshAssembler())

    def assemble(self, A: 'GenericTensor', a: 'MultiMeshForm') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshAssembler_assemble(self, A, a)

    extend_cut_cell_integration = _swig_property(_fem.MultiMeshAssembler_extend_cut_cell_integration_get, _fem.MultiMeshAssembler_extend_cut_cell_integration_set)
    __swig_destroy__ = _fem.delete_MultiMeshAssembler
MultiMeshAssembler.assemble = new_instancemethod(_fem.MultiMeshAssembler_assemble, None, MultiMeshAssembler)
MultiMeshAssembler_swigregister = _fem.MultiMeshAssembler_swigregister
MultiMeshAssembler_swigregister(MultiMeshAssembler)

class MultiMeshDirichletBC(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.MultiMeshDirichletBC_swiginit(self, _fem.new_MultiMeshDirichletBC(*args))
    __swig_destroy__ = _fem.delete_MultiMeshDirichletBC

    def apply(self, *args) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshDirichletBC_apply(self, *args)


    def zero(self, A: 'GenericMatrix') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshDirichletBC_zero(self, A)


    def homogenize(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshDirichletBC_homogenize(self)

MultiMeshDirichletBC.apply = new_instancemethod(_fem.MultiMeshDirichletBC_apply, None, MultiMeshDirichletBC)
MultiMeshDirichletBC.zero = new_instancemethod(_fem.MultiMeshDirichletBC_zero, None, MultiMeshDirichletBC)
MultiMeshDirichletBC.homogenize = new_instancemethod(_fem.MultiMeshDirichletBC_homogenize, None, MultiMeshDirichletBC)
MultiMeshDirichletBC_swigregister = _fem.MultiMeshDirichletBC_swigregister
MultiMeshDirichletBC_swigregister(MultiMeshDirichletBC)

class MultiMeshDofMap(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.MultiMeshDofMap_swiginit(self, _fem.new_MultiMeshDofMap(*args))
    __swig_destroy__ = _fem.delete_MultiMeshDofMap

    def num_parts(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshDofMap_num_parts(self)


    def part(self, i: 'std::size_t') -> "std::shared_ptr< dolfin::GenericDofMap const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshDofMap_part(self, i)


    def add(self, dofmap: 'std::shared_ptr< dolfin::GenericDofMap const >') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshDofMap_add(self, dofmap)


    def build(self, function_space: 'MultiMeshFunctionSpace', offsets: 'std::vector< dolfin::la_index > const &') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshDofMap_build(self, function_space, offsets)


    def clear(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshDofMap_clear(self)


    def global_dimension(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshDofMap_global_dimension(self)


    def ownership_range(self) -> "std::pair< std::size_t,std::size_t >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshDofMap_ownership_range(self)


    def off_process_owner(self) -> "std::vector< int > const &":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshDofMap_off_process_owner(self)


    def index_map(self) -> "std::shared_ptr< dolfin::IndexMap >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshDofMap_index_map(self)


    def str(self, verbose: 'bool') -> "std::string":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshDofMap_str(self, verbose)


    def inactive_dofs(self, multimesh: 'MultiMesh', part_id: 'std::size_t') -> "std::vector< dolfin::la_index >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshDofMap_inactive_dofs(self, multimesh, part_id)

MultiMeshDofMap.num_parts = new_instancemethod(_fem.MultiMeshDofMap_num_parts, None, MultiMeshDofMap)
MultiMeshDofMap.part = new_instancemethod(_fem.MultiMeshDofMap_part, None, MultiMeshDofMap)
MultiMeshDofMap.add = new_instancemethod(_fem.MultiMeshDofMap_add, None, MultiMeshDofMap)
MultiMeshDofMap.build = new_instancemethod(_fem.MultiMeshDofMap_build, None, MultiMeshDofMap)
MultiMeshDofMap.clear = new_instancemethod(_fem.MultiMeshDofMap_clear, None, MultiMeshDofMap)
MultiMeshDofMap.global_dimension = new_instancemethod(_fem.MultiMeshDofMap_global_dimension, None, MultiMeshDofMap)
MultiMeshDofMap.ownership_range = new_instancemethod(_fem.MultiMeshDofMap_ownership_range, None, MultiMeshDofMap)
MultiMeshDofMap.off_process_owner = new_instancemethod(_fem.MultiMeshDofMap_off_process_owner, None, MultiMeshDofMap)
MultiMeshDofMap.index_map = new_instancemethod(_fem.MultiMeshDofMap_index_map, None, MultiMeshDofMap)
MultiMeshDofMap.str = new_instancemethod(_fem.MultiMeshDofMap_str, None, MultiMeshDofMap)
MultiMeshDofMap.inactive_dofs = new_instancemethod(_fem.MultiMeshDofMap_inactive_dofs, None, MultiMeshDofMap)
MultiMeshDofMap_swigregister = _fem.MultiMeshDofMap_swigregister
MultiMeshDofMap_swigregister(MultiMeshDofMap)

class MultiMeshForm(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.MultiMeshForm_swiginit(self, _fem.new_MultiMeshForm(*args))
    __swig_destroy__ = _fem.delete_MultiMeshForm

    def rank(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshForm_rank(self)


    def num_parts(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshForm_num_parts(self)


    def multimesh(self) -> "std::shared_ptr< dolfin::MultiMesh const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshForm_multimesh(self)


    def part(self, i: 'std::size_t') -> "std::shared_ptr< dolfin::Form const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshForm_part(self, i)


    def function_space(self, i: 'std::size_t') -> "std::shared_ptr< dolfin::MultiMeshFunctionSpace const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshForm_function_space(self, i)


    def add(self, form: 'std::shared_ptr< dolfin::Form const >') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshForm_add(self, form)


    def build(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshForm_build(self)


    def clear(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshForm_clear(self)


    def set_multimesh_coefficient(self, i: 'std::size_t', coefficient: 'std::shared_ptr< dolfin::MultiMeshFunction const >') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshForm_set_multimesh_coefficient(self, i, coefficient)


    def multimesh_coefficients(self) -> "std::map< std::size_t,std::shared_ptr< dolfin::MultiMeshFunction const > >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshForm_multimesh_coefficients(self)


    def multimesh_coefficient(self, i: 'std::size_t') -> "std::shared_ptr< dolfin::MultiMeshFunction const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshForm_multimesh_coefficient(self, i)


    def multimesh_coefficient_keys(self) -> "std::vector< std::size_t >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiMeshForm_multimesh_coefficient_keys(self)

MultiMeshForm.rank = new_instancemethod(_fem.MultiMeshForm_rank, None, MultiMeshForm)
MultiMeshForm.num_parts = new_instancemethod(_fem.MultiMeshForm_num_parts, None, MultiMeshForm)
MultiMeshForm.multimesh = new_instancemethod(_fem.MultiMeshForm_multimesh, None, MultiMeshForm)
MultiMeshForm.part = new_instancemethod(_fem.MultiMeshForm_part, None, MultiMeshForm)
MultiMeshForm.function_space = new_instancemethod(_fem.MultiMeshForm_function_space, None, MultiMeshForm)
MultiMeshForm.add = new_instancemethod(_fem.MultiMeshForm_add, None, MultiMeshForm)
MultiMeshForm.build = new_instancemethod(_fem.MultiMeshForm_build, None, MultiMeshForm)
MultiMeshForm.clear = new_instancemethod(_fem.MultiMeshForm_clear, None, MultiMeshForm)
MultiMeshForm.set_multimesh_coefficient = new_instancemethod(_fem.MultiMeshForm_set_multimesh_coefficient, None, MultiMeshForm)
MultiMeshForm.multimesh_coefficients = new_instancemethod(_fem.MultiMeshForm_multimesh_coefficients, None, MultiMeshForm)
MultiMeshForm.multimesh_coefficient = new_instancemethod(_fem.MultiMeshForm_multimesh_coefficient, None, MultiMeshForm)
MultiMeshForm.multimesh_coefficient_keys = new_instancemethod(_fem.MultiMeshForm_multimesh_coefficient_keys, None, MultiMeshForm)
MultiMeshForm_swigregister = _fem.MultiMeshForm_swigregister
MultiMeshForm_swigregister(MultiMeshForm)

class PETScDMCollection(la.PETScObject):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, function_spaces: 'std::vector< std::shared_ptr< dolfin::FunctionSpace const > >'):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.PETScDMCollection_swiginit(self, _fem.new_PETScDMCollection(function_spaces))
    __swig_destroy__ = _fem.delete_PETScDMCollection

    def check_ref_count(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.PETScDMCollection_check_ref_count(self)


    def reset(self, i: 'int') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.PETScDMCollection_reset(self, i)


    def create_transfer_matrix(coarse_space: 'FunctionSpace', fine_space: 'FunctionSpace') -> "std::shared_ptr< dolfin::PETScMatrix >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.PETScDMCollection_create_transfer_matrix(coarse_space, fine_space)

    create_transfer_matrix = staticmethod(create_transfer_matrix)

    def get_dm(self, i: 'int') -> "void":
        """Return petsc4py representation of PETSc DM"""
        return _fem.PETScDMCollection_get_dm(self, i)

PETScDMCollection.check_ref_count = new_instancemethod(_fem.PETScDMCollection_check_ref_count, None, PETScDMCollection)
PETScDMCollection.reset = new_instancemethod(_fem.PETScDMCollection_reset, None, PETScDMCollection)
PETScDMCollection.get_dm = new_instancemethod(_fem.PETScDMCollection_get_dm, None, PETScDMCollection)
PETScDMCollection_swigregister = _fem.PETScDMCollection_swigregister
PETScDMCollection_swigregister(PETScDMCollection)

def PETScDMCollection_create_transfer_matrix(coarse_space: 'FunctionSpace', fine_space: 'FunctionSpace') -> "std::shared_ptr< dolfin::PETScMatrix >":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.PETScDMCollection_create_transfer_matrix(coarse_space, fine_space)


HierarchicalLinearVariationalProblem.leaf_node = HierarchicalLinearVariationalProblem._leaf_node
HierarchicalLinearVariationalProblem.root_node = HierarchicalLinearVariationalProblem._root_node
HierarchicalLinearVariationalProblem.child = HierarchicalLinearVariationalProblem._child
HierarchicalLinearVariationalProblem.parent = HierarchicalLinearVariationalProblem._parent


HierarchicalNonlinearVariationalProblem.leaf_node = HierarchicalNonlinearVariationalProblem._leaf_node
HierarchicalNonlinearVariationalProblem.root_node = HierarchicalNonlinearVariationalProblem._root_node
HierarchicalNonlinearVariationalProblem.child = HierarchicalNonlinearVariationalProblem._child
HierarchicalNonlinearVariationalProblem.parent = HierarchicalNonlinearVariationalProblem._parent


HierarchicalForm.leaf_node = HierarchicalForm._leaf_node
HierarchicalForm.root_node = HierarchicalForm._root_node
HierarchicalForm.child = HierarchicalForm._child
HierarchicalForm.parent = HierarchicalForm._parent


HierarchicalDirichletBC.leaf_node = HierarchicalDirichletBC._leaf_node
HierarchicalDirichletBC.root_node = HierarchicalDirichletBC._root_node
HierarchicalDirichletBC.child = HierarchicalDirichletBC._child
HierarchicalDirichletBC.parent = HierarchicalDirichletBC._parent

class MultiStageScheme(common.Variable):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.MultiStageScheme_swiginit(self, _fem.new_MultiStageScheme(*args))

    def dt_stage_offset(self) -> "std::vector< double > const &":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiStageScheme_dt_stage_offset(self)


    def order(self) -> "unsigned int":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiStageScheme_order(self)


    def bcs(self) -> "std::vector< std::shared_ptr< dolfin::DirichletBC const > >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiStageScheme_bcs(self)


    def implicit(self, *args) -> "bool":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiStageScheme_implicit(self, *args)


    def jacobian_index(self, stage: 'unsigned int') -> "int":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.MultiStageScheme_jacobian_index(self, stage)

    __swig_destroy__ = _fem.delete_MultiStageScheme
MultiStageScheme.dt_stage_offset = new_instancemethod(_fem.MultiStageScheme_dt_stage_offset, None, MultiStageScheme)
MultiStageScheme.order = new_instancemethod(_fem.MultiStageScheme_order, None, MultiStageScheme)
MultiStageScheme.bcs = new_instancemethod(_fem.MultiStageScheme_bcs, None, MultiStageScheme)
MultiStageScheme.implicit = new_instancemethod(_fem.MultiStageScheme_implicit, None, MultiStageScheme)
MultiStageScheme.jacobian_index = new_instancemethod(_fem.MultiStageScheme_jacobian_index, None, MultiStageScheme)
MultiStageScheme_swigregister = _fem.MultiStageScheme_swigregister
MultiStageScheme_swigregister(MultiStageScheme)

class RKSolver(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, scheme: 'std::shared_ptr< dolfin::MultiStageScheme >'):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.RKSolver_swiginit(self, _fem.new_RKSolver(scheme))

    def step(self, dt: 'double') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.RKSolver_step(self, dt)


    def step_interval(self, t0: 'double', t1: 'double', dt: 'double') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.RKSolver_step_interval(self, t0, t1, dt)

    __swig_destroy__ = _fem.delete_RKSolver
RKSolver.step = new_instancemethod(_fem.RKSolver_step, None, RKSolver)
RKSolver.step_interval = new_instancemethod(_fem.RKSolver_step_interval, None, RKSolver)
RKSolver_swigregister = _fem.RKSolver_swigregister
RKSolver_swigregister(RKSolver)

class PointIntegralSolver(common.Variable):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, scheme: 'std::shared_ptr< dolfin::MultiStageScheme >'):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.PointIntegralSolver_swiginit(self, _fem.new_PointIntegralSolver(scheme))
    __swig_destroy__ = _fem.delete_PointIntegralSolver

    def step(self, dt: 'double') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.PointIntegralSolver_step(self, dt)


    def step_interval(self, t0: 'double', t1: 'double', dt: 'double') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.PointIntegralSolver_step_interval(self, t0, t1, dt)


    def default_parameters() -> "dolfin::Parameters":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.PointIntegralSolver_default_parameters()

    default_parameters = staticmethod(default_parameters)

    def reset_newton_solver(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.PointIntegralSolver_reset_newton_solver(self)


    def reset_stage_solutions(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.PointIntegralSolver_reset_stage_solutions(self)


    def num_jacobian_computations(self) -> "std::size_t":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.PointIntegralSolver_num_jacobian_computations(self)

PointIntegralSolver.step = new_instancemethod(_fem.PointIntegralSolver_step, None, PointIntegralSolver)
PointIntegralSolver.step_interval = new_instancemethod(_fem.PointIntegralSolver_step_interval, None, PointIntegralSolver)
PointIntegralSolver.reset_newton_solver = new_instancemethod(_fem.PointIntegralSolver_reset_newton_solver, None, PointIntegralSolver)
PointIntegralSolver.reset_stage_solutions = new_instancemethod(_fem.PointIntegralSolver_reset_stage_solutions, None, PointIntegralSolver)
PointIntegralSolver.num_jacobian_computations = new_instancemethod(_fem.PointIntegralSolver_num_jacobian_computations, None, PointIntegralSolver)
PointIntegralSolver_swigregister = _fem.PointIntegralSolver_swigregister
PointIntegralSolver_swigregister(PointIntegralSolver)

def PointIntegralSolver_default_parameters() -> "dolfin::Parameters":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.PointIntegralSolver_default_parameters()

class HierarchicalErrorControl(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, arg2: 'ErrorControl'):
        _fem.HierarchicalErrorControl_swiginit(self, _fem.new_HierarchicalErrorControl(arg2))
    __swig_destroy__ = _fem.delete_HierarchicalErrorControl
HierarchicalErrorControl.depth = new_instancemethod(_fem.HierarchicalErrorControl_depth, None, HierarchicalErrorControl)
HierarchicalErrorControl.has_parent = new_instancemethod(_fem.HierarchicalErrorControl_has_parent, None, HierarchicalErrorControl)
HierarchicalErrorControl.has_child = new_instancemethod(_fem.HierarchicalErrorControl_has_child, None, HierarchicalErrorControl)
HierarchicalErrorControl._parent = new_instancemethod(_fem.HierarchicalErrorControl__parent, None, HierarchicalErrorControl)
HierarchicalErrorControl._child = new_instancemethod(_fem.HierarchicalErrorControl__child, None, HierarchicalErrorControl)
HierarchicalErrorControl._root_node = new_instancemethod(_fem.HierarchicalErrorControl__root_node, None, HierarchicalErrorControl)
HierarchicalErrorControl._leaf_node = new_instancemethod(_fem.HierarchicalErrorControl__leaf_node, None, HierarchicalErrorControl)
HierarchicalErrorControl.set_parent = new_instancemethod(_fem.HierarchicalErrorControl_set_parent, None, HierarchicalErrorControl)
HierarchicalErrorControl.clear_child = new_instancemethod(_fem.HierarchicalErrorControl_clear_child, None, HierarchicalErrorControl)
HierarchicalErrorControl.set_child = new_instancemethod(_fem.HierarchicalErrorControl_set_child, None, HierarchicalErrorControl)
HierarchicalErrorControl._debug = new_instancemethod(_fem.HierarchicalErrorControl__debug, None, HierarchicalErrorControl)
HierarchicalErrorControl_swigregister = _fem.HierarchicalErrorControl_swigregister
HierarchicalErrorControl_swigregister(HierarchicalErrorControl)

class GenericAdaptiveVariationalSolver(common.Variable):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _fem.delete_GenericAdaptiveVariationalSolver

    def solve(self, tol: 'double const') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericAdaptiveVariationalSolver_solve(self, tol)


    def solve_primal(self) -> "std::shared_ptr< dolfin::Function const >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericAdaptiveVariationalSolver_solve_primal(self)


    def extract_bcs(self) -> "std::vector< std::shared_ptr< dolfin::DirichletBC const > >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericAdaptiveVariationalSolver_extract_bcs(self)


    def evaluate_goal(self, M: 'Form', u: 'std::shared_ptr< dolfin::Function const >') -> "double":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericAdaptiveVariationalSolver_evaluate_goal(self, M, u)


    def adapt_problem(self, mesh: 'std::shared_ptr< dolfin::Mesh const >') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericAdaptiveVariationalSolver_adapt_problem(self, mesh)


    def adaptive_data(self) -> "std::vector< std::shared_ptr< dolfin::Parameters > >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericAdaptiveVariationalSolver_adaptive_data(self)


    def default_parameters() -> "dolfin::Parameters":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericAdaptiveVariationalSolver_default_parameters()

    default_parameters = staticmethod(default_parameters)

    def summary(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.GenericAdaptiveVariationalSolver_summary(self)

GenericAdaptiveVariationalSolver.solve = new_instancemethod(_fem.GenericAdaptiveVariationalSolver_solve, None, GenericAdaptiveVariationalSolver)
GenericAdaptiveVariationalSolver.solve_primal = new_instancemethod(_fem.GenericAdaptiveVariationalSolver_solve_primal, None, GenericAdaptiveVariationalSolver)
GenericAdaptiveVariationalSolver.extract_bcs = new_instancemethod(_fem.GenericAdaptiveVariationalSolver_extract_bcs, None, GenericAdaptiveVariationalSolver)
GenericAdaptiveVariationalSolver.evaluate_goal = new_instancemethod(_fem.GenericAdaptiveVariationalSolver_evaluate_goal, None, GenericAdaptiveVariationalSolver)
GenericAdaptiveVariationalSolver.adapt_problem = new_instancemethod(_fem.GenericAdaptiveVariationalSolver_adapt_problem, None, GenericAdaptiveVariationalSolver)
GenericAdaptiveVariationalSolver.adaptive_data = new_instancemethod(_fem.GenericAdaptiveVariationalSolver_adaptive_data, None, GenericAdaptiveVariationalSolver)
GenericAdaptiveVariationalSolver.summary = new_instancemethod(_fem.GenericAdaptiveVariationalSolver_summary, None, GenericAdaptiveVariationalSolver)
GenericAdaptiveVariationalSolver_swigregister = _fem.GenericAdaptiveVariationalSolver_swigregister
GenericAdaptiveVariationalSolver_swigregister(GenericAdaptiveVariationalSolver)

def GenericAdaptiveVariationalSolver_default_parameters() -> "dolfin::Parameters":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.GenericAdaptiveVariationalSolver_default_parameters()

class AdaptiveLinearVariationalSolver(GenericAdaptiveVariationalSolver):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.AdaptiveLinearVariationalSolver_swiginit(self, _fem.new_AdaptiveLinearVariationalSolver(*args))
    __swig_destroy__ = _fem.delete_AdaptiveLinearVariationalSolver
AdaptiveLinearVariationalSolver_swigregister = _fem.AdaptiveLinearVariationalSolver_swigregister
AdaptiveLinearVariationalSolver_swigregister(AdaptiveLinearVariationalSolver)

class AdaptiveNonlinearVariationalSolver(GenericAdaptiveVariationalSolver):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.AdaptiveNonlinearVariationalSolver_swiginit(self, _fem.new_AdaptiveNonlinearVariationalSolver(*args))
    __swig_destroy__ = _fem.delete_AdaptiveNonlinearVariationalSolver
AdaptiveNonlinearVariationalSolver_swigregister = _fem.AdaptiveNonlinearVariationalSolver_swigregister
AdaptiveNonlinearVariationalSolver_swigregister(AdaptiveNonlinearVariationalSolver)

class ErrorControl(HierarchicalErrorControl, common.Variable):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, a_star: 'std::shared_ptr< dolfin::Form >', L_star: 'std::shared_ptr< dolfin::Form >', residual: 'std::shared_ptr< dolfin::Form >', a_R_T: 'std::shared_ptr< dolfin::Form >', L_R_T: 'std::shared_ptr< dolfin::Form >', a_R_dT: 'std::shared_ptr< dolfin::Form >', L_R_dT: 'std::shared_ptr< dolfin::Form >', eta_T: 'std::shared_ptr< dolfin::Form >', is_linear: 'bool'):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.ErrorControl_swiginit(self, _fem.new_ErrorControl(a_star, L_star, residual, a_R_T, L_R_T, a_R_dT, L_R_dT, eta_T, is_linear))
    __swig_destroy__ = _fem.delete_ErrorControl

    def default_parameters() -> "dolfin::Parameters":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.ErrorControl_default_parameters()

    default_parameters = staticmethod(default_parameters)

    def estimate_error(self, u: 'Function', bcs: 'std::vector< std::shared_ptr< dolfin::DirichletBC const > > const') -> "double":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.ErrorControl_estimate_error(self, u, bcs)


    def compute_indicators(self, indicators: 'dolfin::MeshFunction< double > &', u: 'Function') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.ErrorControl_compute_indicators(self, indicators, u)


    def residual_representation(self, R_T: 'Function', R_dT: 'SpecialFacetFunction', u: 'Function') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.ErrorControl_residual_representation(self, R_T, R_dT, u)


    def compute_cell_residual(self, R_T: 'Function', u: 'Function') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.ErrorControl_compute_cell_residual(self, R_T, u)


    def compute_facet_residual(self, R_dT: 'SpecialFacetFunction', u: 'Function', R_T: 'Function') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.ErrorControl_compute_facet_residual(self, R_dT, u, R_T)


    def compute_dual(self, z: 'Function', bcs: 'std::vector< std::shared_ptr< dolfin::DirichletBC const > > const') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.ErrorControl_compute_dual(self, z, bcs)


    def compute_extrapolation(self, z: 'Function', bcs: 'std::vector< std::shared_ptr< dolfin::DirichletBC const > > const') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.ErrorControl_compute_extrapolation(self, z, bcs)

ErrorControl.estimate_error = new_instancemethod(_fem.ErrorControl_estimate_error, None, ErrorControl)
ErrorControl.compute_indicators = new_instancemethod(_fem.ErrorControl_compute_indicators, None, ErrorControl)
ErrorControl.residual_representation = new_instancemethod(_fem.ErrorControl_residual_representation, None, ErrorControl)
ErrorControl.compute_cell_residual = new_instancemethod(_fem.ErrorControl_compute_cell_residual, None, ErrorControl)
ErrorControl.compute_facet_residual = new_instancemethod(_fem.ErrorControl_compute_facet_residual, None, ErrorControl)
ErrorControl.compute_dual = new_instancemethod(_fem.ErrorControl_compute_dual, None, ErrorControl)
ErrorControl.compute_extrapolation = new_instancemethod(_fem.ErrorControl_compute_extrapolation, None, ErrorControl)
ErrorControl_swigregister = _fem.ErrorControl_swigregister
ErrorControl_swigregister(ErrorControl)

def ErrorControl_default_parameters() -> "dolfin::Parameters":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.ErrorControl_default_parameters()

class Extrapolation(object):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def extrapolate(w: 'Function', v: 'Function') -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.Extrapolation_extrapolate(w, v)

    extrapolate = staticmethod(extrapolate)

    def __init__(self):
        _fem.Extrapolation_swiginit(self, _fem.new_Extrapolation())
    __swig_destroy__ = _fem.delete_Extrapolation
Extrapolation_swigregister = _fem.Extrapolation_swigregister
Extrapolation_swigregister(Extrapolation)

def Extrapolation_extrapolate(w: 'Function', v: 'Function') -> "void":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.Extrapolation_extrapolate(w, v)

class TimeSeries(common.Variable):
    """

    Dummy docstring. Reason: Missing doxygen

    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """

        Dummy docstring. Reason: Missing doxygen

        """
        _fem.TimeSeries_swiginit(self, _fem.new_TimeSeries(*args))
    __swig_destroy__ = _fem.delete_TimeSeries

    def store(self, *args) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.TimeSeries_store(self, *args)


    def retrieve(self, *args) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.TimeSeries_retrieve(self, *args)


    def vector_times(self) -> "std::vector< double >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.TimeSeries_vector_times(self)


    def mesh_times(self) -> "std::vector< double >":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.TimeSeries_mesh_times(self)


    def clear(self) -> "void":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.TimeSeries_clear(self)


    def default_parameters() -> "dolfin::Parameters":
        """

        Dummy docstring. Reason: Missing doxygen

        """
        return _fem.TimeSeries_default_parameters()

    default_parameters = staticmethod(default_parameters)
TimeSeries.store = new_instancemethod(_fem.TimeSeries_store, None, TimeSeries)
TimeSeries.retrieve = new_instancemethod(_fem.TimeSeries_retrieve, None, TimeSeries)
TimeSeries.vector_times = new_instancemethod(_fem.TimeSeries_vector_times, None, TimeSeries)
TimeSeries.mesh_times = new_instancemethod(_fem.TimeSeries_mesh_times, None, TimeSeries)
TimeSeries.clear = new_instancemethod(_fem.TimeSeries_clear, None, TimeSeries)
TimeSeries_swigregister = _fem.TimeSeries_swigregister
TimeSeries_swigregister(TimeSeries)

def TimeSeries_default_parameters() -> "dolfin::Parameters":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.TimeSeries_default_parameters()


def adapt_markers(refined_markers: 'std::vector< std::size_t > &', adapted_mesh: 'Mesh', markers: 'std::vector< std::size_t > const &', mesh: 'Mesh') -> "void":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.adapt_markers(refined_markers, adapted_mesh, markers, mesh)

def adapt(*args) -> "std::shared_ptr< dolfin::ErrorControl >":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    val = _fem.adapt(*args)

    from dolfin import cpp
    from dolfin.functions import Function, FunctionSpace
    if isinstance(val, cpp.Function):
        return Function(val)
    if isinstance(val, cpp.FunctionSpace):
        return FunctionSpace(val)
    # NOTE: Mesh will possibly appear here when Mesh has special PyDOLFIN wrapper
    #       subclassing ufl.Domain
    return val


    return val

def mark(markers: 'dolfin::MeshFunction< bool > &', indicators: 'dolfin::MeshFunction< double > const &', strategy: 'std::string const', fraction: 'double const') -> "void":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.mark(markers, indicators, strategy, fraction)

def dorfler_mark(markers: 'dolfin::MeshFunction< bool > &', indicators: 'dolfin::MeshFunction< double > const &', fraction: 'double const') -> "void":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.dorfler_mark(markers, indicators, fraction)

def fem_solve(*args) -> "void":
    """

    Dummy docstring. Reason: Missing doxygen

    """
    return _fem.fem_solve(*args)

HierarchicalErrorControl.leaf_node = HierarchicalErrorControl._leaf_node
HierarchicalErrorControl.root_node = HierarchicalErrorControl._root_node
HierarchicalErrorControl.child = HierarchicalErrorControl._child
HierarchicalErrorControl.parent = HierarchicalErrorControl._parent
